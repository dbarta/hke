<%= render 'hke/shared/community_admin_navbar' %>

<div class="container mx-auto p-4" style="direction: rtl;">
  <div class="max-w-2xl mx-auto">
    <div class="bg-white rounded-lg shadow-sm p-6">
      <h1 class="text-2xl font-bold mb-6"><%= t('csv_imports.new.title') %></h1>

      <%= form_with model: [@csv_import], url: csv_imports_path, local: true,
          multipart: true, id: "csv_import_form",
          class: "space-y-6" do |form| %>

        <%= render "shared/error_messages", resource: form.object %>

        <!-- Import Type Selection -->
        <div class="space-y-3">
          <label class="block text-sm font-medium text-gray-700">
            <%= t('csv_imports.new.import_type') %>
          </label>
          <div class="space-y-2">
            <div class="flex items-center">
              <%= form.radio_button :import_type, 'deceased_people', class: "h-4 w-4 text-blue-600" %>
              <%= form.label :import_type_deceased_people, t('csv_imports.import_types.deceased_people'),
                  class: "mr-2 text-sm text-gray-700" %>
            </div>
            <div class="flex items-center">
              <%= form.radio_button :import_type, 'contact_people', class: "h-4 w-4 text-blue-600" %>
              <%= form.label :import_type_contact_people, t('csv_imports.import_types.contact_people'),
                  class: "mr-2 text-sm text-gray-700" %>
            </div>
            <div class="flex items-center">
              <%= form.radio_button :import_type, 'combined', class: "h-4 w-4 text-blue-600" %>
              <%= form.label :import_type_combined, t('csv_imports.import_types.combined'),
                  class: "mr-2 text-sm text-gray-700" %>
            </div>
          </div>
        </div>

        <!-- File Upload with Drag and Drop -->
        <div class="space-y-3">
          <label class="block text-sm font-medium text-gray-700">
            <%= t('csv_imports.new.file_upload') %>
          </label>

          <div id="drop_zone" class="border-2 border-dashed border-gray-300 rounded-lg p-8 text-center hover:border-gray-400 transition-colors cursor-pointer">
            <div id="drop_zone_content">
              <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
              </svg>
              <div class="mt-4">
                <p class="text-sm text-gray-600">
                  <%= t('csv_imports.new.drag_drop_text') %>
                </p>
                <p class="text-xs text-gray-500 mt-1">
                  <%= t('csv_imports.new.file_requirements') %>
                </p>
              </div>
            </div>

            <%= form.file_field :file,
                id: "file_input",
                class: "hidden",
                accept: ".csv,text/csv",
                onchange: "handleFileSelect(this)" %>
          </div>

          <div id="file_info" class="hidden bg-blue-50 p-3 rounded">
            <div class="flex items-center">
              <svg class="h-5 w-5 text-blue-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4z" clip-rule="evenodd" />
              </svg>
              <span id="file_name" class="mr-2 text-sm text-blue-700"></span>
              <span id="file_size" class="text-xs text-blue-500"></span>
            </div>
          </div>
        </div>

        <!-- Submit Button -->
        <div class="flex justify-end space-x-3 space-x-reverse">
          <%= link_to t('cancel'), root_path, class: "px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50" %>
          <%= form.submit t('csv_imports.new.upload_and_process'),
              class: "px-4 py-2 bg-blue-600 text-white rounded-md text-sm font-medium hover:bg-blue-700 disabled:opacity-50",
              id: "submit_btn",
              disabled: true %>
        </div>
      <% end %>
    </div>

    <!-- Instructions -->
    <div class="mt-6 bg-gray-50 rounded-lg p-4">
      <h3 class="text-lg font-medium text-gray-900 mb-3"><%= t('csv_imports.new.instructions_title') %></h3>
      <div class="text-sm text-gray-600 space-y-2">
        <p><%= t('csv_imports.new.instruction_1') %></p>
        <p><%= t('csv_imports.new.instruction_2') %></p>
        <p><%= t('csv_imports.new.instruction_3') %></p>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const dropZone = document.getElementById('drop_zone');
  const fileInput = document.getElementById('file_input');
  const fileInfo = document.getElementById('file_info');
  const fileName = document.getElementById('file_name');
  const fileSize = document.getElementById('file_size');
  const submitBtn = document.getElementById('submit_btn');

  // Drag and drop handlers
  dropZone.addEventListener('click', () => fileInput.click());

  dropZone.addEventListener('dragover', (e) => {
    e.preventDefault();
    dropZone.classList.add('border-blue-400', 'bg-blue-50');
  });

  dropZone.addEventListener('dragleave', (e) => {
    e.preventDefault();
    dropZone.classList.remove('border-blue-400', 'bg-blue-50');
  });

  dropZone.addEventListener('drop', (e) => {
    e.preventDefault();
    dropZone.classList.remove('border-blue-400', 'bg-blue-50');

    const files = e.dataTransfer.files;
    if (files.length > 0) {
      fileInput.files = files;
      handleFileSelect(fileInput);
    }
  });
});

function handleFileSelect(input) {
  const file = input.files[0];
  const fileInfo = document.getElementById('file_info');
  const fileName = document.getElementById('file_name');
  const fileSize = document.getElementById('file_size');
  const submitBtn = document.getElementById('submit_btn');

  if (file) {
    fileName.textContent = file.name;
    fileSize.textContent = formatFileSize(file.size);
    fileInfo.classList.remove('hidden');
    submitBtn.disabled = false;
  } else {
    fileInfo.classList.add('hidden');
    submitBtn.disabled = true;
  }
}

function formatFileSize(bytes) {
  if (bytes === 0) return '0 Bytes';
  const k = 1024;
  const sizes = ['Bytes', 'KB', 'MB', 'GB'];
  const i = Math.floor(Math.log(bytes) / Math.log(k));
  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}
</script>
